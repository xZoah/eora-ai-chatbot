#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ FastAPI + Telegram –±–æ—Ç–∞ —á–µ—Ä–µ–∑ webhook –≤ Railway
"""

import os
import uvicorn
from fastapi import FastAPI, Request
from app.main import app
from app.bot.telegram_bot import EoraTelegramBot

# –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
telegram_bot = None

def initialize_telegram_bot():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Telegram –±–æ—Ç–∞"""
    global telegram_bot
    try:
        telegram_bot = EoraTelegramBot()
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º RAG –∏ –ë–î
        if telegram_bot.rag_manager:
            print("‚úÖ RAG system initialized")
        if telegram_bot.database_service:
            print("‚úÖ Database initialized")
        return True
    except Exception as e:
        print(f"‚ùå Failed to initialize bot: {e}")
        return False

# –î–æ–±–∞–≤–ª—è–µ–º webhook endpoint –∫ FastAPI
@app.post("/webhook/telegram")
async def telegram_webhook(request: Request):
    """Webhook endpoint –¥–ª—è Telegram –±–æ—Ç–∞"""
    global telegram_bot
    
    if not telegram_bot:
        return {"error": "Bot not initialized"}
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç Telegram
        data = await request.json()
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ –±–æ—Ç–∞
        await telegram_bot.handle_webhook_update(data)
        
        return {"status": "ok"}
    except Exception as e:
        print(f"‚ùå Webhook error: {e}")
        return {"error": str(e)}

@app.get("/webhook/telegram/setup")
async def setup_webhook():
    """–ù–∞—Å—Ç—Ä–æ–∏—Ç—å webhook –¥–ª—è Telegram –±–æ—Ç–∞"""
    global telegram_bot
    
    if not telegram_bot:
        return {"error": "Bot not initialized"}
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        app_url = os.getenv("RAILWAY_STATIC_URL", "https://web-production-3cb0d.up.railway.app")
        webhook_url = f"{app_url}/webhook/telegram"
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook
        success = telegram_bot.setup_webhook(webhook_url)
        
        if success:
            return {"status": "webhook_set", "url": webhook_url}
        else:
            return {"error": "Failed to set webhook"}
            
    except Exception as e:
        print(f"‚ùå Webhook setup error: {e}")
        return {"error": str(e)}

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print(f"üì¶ Deployed version: {os.getenv('DEPLOYED_VERSION', 'unknown')}")
    print("üîÑ Starting FastAPI with Telegram webhook...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
    if initialize_telegram_bot():
        print("‚úÖ Telegram bot initialized successfully")
    else:
        print("‚ö†Ô∏è Telegram bot initialization failed, continuing with API only")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º FastAPI
    port = int(os.getenv("PORT", 8000))
    print(f"üöÄ Starting FastAPI server on port {port}")
    
    uvicorn.run(
        "start_webhook:app",
        host="0.0.0.0",
        port=port,
        reload=False
    )

if __name__ == "__main__":
    main() 